---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "helpers.labels.fullname" $ }}
  labels: {{- include "helpers.labels.labels" (dict "Global" $) | nindent 4 }}
spec:
  replicas: {{ $.Values.pod.replicas.dashboard }}
  selector:
    matchLabels: {{- include "helpers.labels.matchLabels" (dict "Global" $) | nindent 6 }}
{{- with $.Values.pod.lifecycle.upgrades.deployments }}
  revisionHistoryLimit: {{ .revision_history }}
  strategy:
    type: {{ .pod_replacement_strategy }}
  {{- if eq .pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .rolling_update.max_unavailable }}
      maxSurge: {{ .rolling_update.max_surge }}
  {{- end }}
{{- end }}
  template:
    metadata:
      labels: {{- include "helpers.labels.labels" (dict "Global" $) | nindent 8 }}
    spec:
      serviceAccountName: {{ template "helpers.labels.fullname" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      affinity:
{{- tuple $ "tekton_dashboard" "server" | include "tekton.pod_anti_affinity" | nindent 8 }}
      nodeSelector:
{{- include "helpers.pod.node_selector" ( dict "Global" $ "Application" "tekton_dashboard" ) | nindent 8 }}
      terminationGracePeriodSeconds: {{ $.Values.pod.lifecycle.termination_grace_period.dashboard.timeout | default "30" }}
      containers:
        - name: tekton-dashboard
          image: {{ include "helpers.pod.container.image" ( dict "Global" $ "Application" "tekton_dashboard" ) }}
          imagePullPolicy: {{ $.Values.images.pull.policy | quote }}
{{- include "helpers.container.resources" ( dict "Global" $ "Application" "tekton_dashboard" ) | nindent 10 }}
          args:
          - --port={{ $.Values.params.endpoints.ports.web.port }}
          - --logout-url={{ $.Values.config.args.logout_url }}
          - --pipelines-namespace={{ $.Release.Namespace }}
          - --triggers-namespace={{ $.Release.Namespace }}
          - --read-only={{ $.Values.config.args.read_only }}
          - --csrf-secure-cookie={{ $.Values.config.args.csrf_secure_cookie }}
          - --log-level={{ $.Values.config.args.log_level }}
          - --log-format={{ $.Values.config.args.log_format }}
          - --namespace={{ $.Values.config.args.namespace }}
          - --openshift={{ $.Values.config.args.openshift }}
          - --stream-logs={{ $.Values.config.args.stream_logs }}
          - --external-logs={{ $.Values.config.args.external_logs }}
          env:
            - name: INSTALLED_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: web
              containerPort: {{ $.Values.params.endpoints.ports.web.port }}
        {{- if $.Values.pod.probes.tekton_dashboard.tekton_dashboard.readiness.enabled }}
          readinessProbe:
            httpGet:
              scheme: {{ $.Values.params.endpoints.ports.web.scheme | upper }}
              path: /readiness
              port: {{ $.Values.params.endpoints.ports.web.port }}
{{ toYaml $.Values.pod.probes.tekton_dashboard.tekton_dashboard.readiness.params | nindent 12 }}
        {{- end }}
        {{- if $.Values.pod.probes.tekton_dashboard.tekton_dashboard.liveness.enabled }}
          livenessProbe:
            httpGet:
              scheme: {{ $.Values.params.endpoints.ports.web.scheme | upper }}
              path: /health
              port: {{ $.Values.params.endpoints.ports.web.port }}
{{ toYaml $.Values.pod.probes.tekton_dashboard.tekton_dashboard.liveness.params | nindent 12 }}
        {{- end }}
      volumes: []
