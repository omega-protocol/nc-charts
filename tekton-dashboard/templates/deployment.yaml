{{- if $.Values.manifests.deployment }}
{{- $serviceAccountName := "tekton-dashboard" -}}
{{- $applicationName := "tekton-dashboard" -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $applicationName }}
  labels:
    release_group: {{ $.Values.release_group | default $.Release.Name }}
    application: "tekton-dashboard"
    component: "server"
spec:
  replicas: {{ $.Values.pod.replicas.dashboard }}
  selector:
    matchLabels:
      release_group: {{ $.Values.release_group | default $.Release.Name }}
      application: "tekton-dashboard"
      component: "server"
{{- with $.Values.pod.lifecycle.upgrades.deployments }}
  revisionHistoryLimit: {{ .revision_history }}
  strategy:
    type: {{ .pod_replacement_strategy }}
  {{- if eq .pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .rolling_update.max_unavailable }}
      maxSurge: {{ .rolling_update.max_surge }}
  {{- end }}
{{- end }}
  template:
    metadata:
      labels:
        release_group: {{ $.Values.release_group | default $.Release.Name }}
        application: "tekton-dashboard"
        component: "server"
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      affinity:
{{- tuple $ "tekton_dashboard" "server" | include "tekton.pod_anti_affinity" | nindent 8 }}
      nodeSelector:
        {{ $.Values.labels.tekton_dashboard.node_selector_key }}: {{ $.Values.labels.tekton_dashboard.node_selector_value }}
      terminationGracePeriodSeconds: {{ $.Values.pod.lifecycle.termination_grace_period.dashboard.timeout | default "30" }}
      containers:
        - name: tekton-dashboard
          image: {{ index $.Values.images.tags.tekton_dashboard | quote }}
          imagePullPolicy: {{ $.Values.images.pull_policy }}
        {{- if $.Values.pod.resources.enabled }}
          resources:
{{ toYaml $.Values.pod.resources.tekton_dashboard | trim | indent 12 }}
        {{- end }}
          args:
          - --port={{ tuple "tekton-dashboard" "internal" "web" $ | include "tekton.port_lookup" }}
          - --logout-url={{ $.Values.conf.args.logout_url }}
          - --pipelines-namespace={{ $.Release.Namespace }}
          - --triggers-namespace={{ $.Release.Namespace }}
          - --read-only={{ $.Values.conf.args.read_only }}
          - --csrf-secure-cookie={{ $.Values.conf.args.csrf_secure_cookie }}
          - --log-level={{ $.Values.conf.args.log_level }}
          - --log-format={{ $.Values.conf.args.log_format }}
          - --namespace={{ $.Values.conf.args.namespace }}
          - --openshift={{ $.Values.conf.args.openshift }}
          - --stream-logs={{ $.Values.conf.args.stream_logs }}
          - --external-logs={{ $.Values.conf.args.external_logs }}
          env:
            - name: INSTALLED_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: web
              containerPort: {{ tuple "tekton-dashboard" "internal" "web" $ | include "tekton.port_lookup" }}
        {{- if $.Values.pod.probes.tekton_dashboard.tekton_dashboard.readiness.enabled }}
          readinessProbe:
            httpGet:
              scheme: {{ tuple "tekton_dashboard" "internal" "web" $ | include "tekton.scheme_lookup" | upper }}
              path: /readiness
              port: {{ tuple "tekton_dashboard" "internal" "web" $ | include "tekton.port_lookup" }}
{{ toYaml $.Values.pod.probes.tekton_dashboard.tekton_dashboard.readiness.params | nindent 12 }}
        {{- end }}
        {{- if $.Values.pod.probes.tekton_dashboard.tekton_dashboard.liveness.enabled }}
          livenessProbe:
            httpGet:
              scheme: {{ tuple "tekton_dashboard" "internal" "web" $ | include "tekton.scheme_lookup" | upper }}
              path: /health
              port: {{ tuple "tekton_dashboard" "internal" "web" $ | include "tekton.port_lookup" }}
{{ toYaml $.Values.pod.probes.tekton_dashboard.tekton_dashboard.liveness.params | nindent 12 }}
        {{- end }}
      volumes: []
{{- end }}
