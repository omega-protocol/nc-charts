---
conf:
  extensions: []
  example:
  observability:
    # These are sample values
    metrics.backend-destination: prometheus
    # metrics.allow-stackdriver-custom-metrics: "false"
  zap_logger_config:
    level: info
    development: false
    sampling:
      initial: 100
      thereafter: 100
    outputPaths:
      - stdout
    errorOutputPaths:
      - stderr
    encoding: json
    encoderConfig:
      timeKey: ""
      levelKey: level
      nameKey: logger
      callerKey: caller
      messageKey: msg
      stacktraceKey: stacktrace
      lineEnding: ""
      levelEncoder: ""
      timeEncoder: ""
      durationEncoder: ""
      callerEncoder: ""
  loglevel:
    controller: info
    webhook: info
    eventlistener: info

dependencies:
  dynamic:
    common:
      local_image_registry:
        services:
          - endpoint: node
            service: local_image_registry
  static:
    image_repo_sync:
      services:
        - endpoint: internal
          service: local_image_registry
    tekton_dashboard: []
endpoints:
  cluster_domain_suffix: cluster.local
  local_image_registry:
    host_fqdn_override:
      default: null
    hosts:
      default: localhost
      internal: docker-registry
      node: localhost
    name: docker-registry
    namespace: docker-registry
    port:
      registry:
        node: 5000
  tekton_triggers:
    host_fqdn_override:
      default: null
    hosts:
      default: tekton-triggers
      public: tekton-triggers
    name: tekton
    path:
      default: null
    port:
      webhook:
        default: 443
        target: 8443
      metrics:
        default: 9090
    scheme:
      default: http
images:
  local_registry:
    active: false
    exclude:
      - dep_check
      - image_repo_sync
  pull_policy: IfNotPresent
  tags:
    dep_check: 'quay.io/airshipit/kubernetes-entrypoint:v1.0.0'
    image_repo_sync: 'docker.io/docker:17.07.0'
    tekton_controller: "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller:v0.9.1@sha256:89e105cacb853ef8866baf0e2f0030651ec719e9bdc7cf56972edbd68dbd4779"
    tekton_webhook: "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook:v0.9.1@sha256:496bea4b0524c21be6bfe4eb5e99f92119cea3e58a93ed06a76536d7a1d9032c"
    tekton_eventlistener: "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink:v0.9.1@sha256:b687fc18b818f6e031083735b1833e6db3ba18d5113cfdc1ec8eb3c980e0f67d"
jobs: null
labels:
  tekton_dashboard:
    node_selector_key: teckton
    node_selector_value: enabled
manifests:
  deployment: true
  ingress: true
  poddisruptionbudget: false
  rbac: true
  service_metrics: true
  service_webhook: true
  podsecuritypolicy: true
network:
  dashboard:
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
      classes:
        cluster: nginx-cluster
        namespace: nginx
      public: true
  external_policy_local: false
  node_port:
    enabled: false
    port: 32000
pod:
  affinity:
    anti:
      topologyKey:
        default: kubernetes.io/hostname
      type:
        default: preferredDuringSchedulingIgnoredDuringExecution
      weight:
        default: 10
  lifecycle:
    disruption_budget:
      dashboard:
        min_available: 0
    termination_grace_period:
      dashboard:
        timeout: 30
    upgrades:
      deployments:
        pod_replacement_strategy: RollingUpdate
        revision_history: 3
        rolling_update:
          max_surge: 3
          max_unavailable: 1
  mounts:
    tekton_webhook:
      init_container: null
      tekton_webhook:
        volumeMounts: null
        volumes: null
    tekton_controller:
      init_container: null
      tekton_controller:
        volumeMounts: null
        volumes: null
  replicas:
    controller: 1
    webhook: 1
  resources:
    tekton_dashboard:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    enabled: false
  security_context:
    tekton_dashboard:
      pod:
        runAsNonRoot: true
        runAsUser: 65532
release_group: null
secrets: null
